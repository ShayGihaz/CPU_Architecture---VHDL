-- VHDL Entity MIPS.MIPS_tb.symbol
--
-- Created:
--          by - kolaman.UNKNOWN (KOLAMAN-PC)
--          at - 09:22:45 17/02/2013
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2011.1 (Build 18)
--


ENTITY AAA_MCU_tb IS
-- Declarations

END AAA_MCU_tb ;

--
-- VHDL Architecture MIPS.MIPS_tb.struct
--
-- Created:
--          by - kolaman.UNKNOWN (KOLAMAN-PC)
--          at - 09:22:45 17/02/2013
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2011.1 (Build 18)
--
LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;

LIBRARY work;

ARCHITECTURE struct OF AAA_MCU_tb IS

   -- Architecture declarations

   -- Internal signal declarations
	--SIGNAL reset,clock      					: STD_LOGIC;
	SIGNAL clock      						: STD_LOGIC;
	SIGNAL PC              					: STD_LOGIC_VECTOR( 9 DOWNTO 0 );
	SIGNAL Instruction_out					: STD_LOGIC_VECTOR( 31 DOWNTO 0 );
	SIGNAL LED								: STD_LOGIC_VECTOR( 7 DOWNTO 0 );
	SIGNAL HEX0								: STD_LOGIC_VECTOR( 6 DOWNTO 0 );
	SIGNAL HEX1								: STD_LOGIC_VECTOR( 6 DOWNTO 0 );
	SIGNAL HEX2								: STD_LOGIC_VECTOR( 6 DOWNTO 0 );
	SIGNAL HEX3								: STD_LOGIC_VECTOR( 6 DOWNTO 0 );
	SIGNAL HEX4								: STD_LOGIC_VECTOR( 6 DOWNTO 0 );
	SIGNAL HEX5								: STD_LOGIC_VECTOR( 6 DOWNTO 0 );
	SIGNAL SW 								: STD_LOGIC_VECTOR( 7 DOWNTO 0 );
	SIGNAL push0, push1, push2, push3 		: STD_LOGIC;
	SIGNAL PWM								: STD_LOGIC;


   -- Component Declarations
	COMPONENT MCU IS
	
		PORT( CLK_in							: IN 	STD_LOGIC; 
			SW								: IN    STD_LOGIC_VECTOR (7 DOWNTO 0);
			-- Output important signals to pins for easy display in Simulator
			PC								: OUT   STD_LOGIC_VECTOR( 9 DOWNTO 0 );
			Instruction_out					: OUT 	STD_LOGIC_VECTOR( 31 DOWNTO 0 );
			push0, push1, push2, push3		: IN    STD_LOGIC;
			PWM								: OUT   STD_LOGIC;
			LED								: OUT   STD_LOGIC_VECTOR (7 DOWNTO 0);
			HEX0							: OUT   STD_LOGIC_VECTOR (6 DOWNTO 0);
			HEX1							: OUT   STD_LOGIC_VECTOR (6 DOWNTO 0);
			HEX2							: OUT   STD_LOGIC_VECTOR (6 DOWNTO 0);
			HEX3							: OUT   STD_LOGIC_VECTOR (6 DOWNTO 0);
			HEX4							: OUT   STD_LOGIC_VECTOR (6 DOWNTO 0);
			HEX5							: OUT   STD_LOGIC_VECTOR (6 DOWNTO 0));
			
	END 	COMPONENT;
	
	
   COMPONENT MIPS_tester
   PORT ( 
		clock								: out 	STD_LOGIC; 
		PC									: in  STD_LOGIC_VECTOR( 9 DOWNTO 0 );
     	Instruction_out						: in 	STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		LED						 			: in 	STD_LOGIC_VECTOR( 7 DOWNTO 0 );
		HEX0, HEX1, HEX2, HEX3, HEX4, HEX5 	: in 	STD_LOGIC_VECTOR( 6 DOWNTO 0 );
		SW 									: out 	STD_LOGIC_VECTOR( 7 DOWNTO 0 );
		push0, push1, push2, push3 			: out 	STD_LOGIC;
		PWM									: in   STD_LOGIC);
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : MCU USE ENTITY work.mcu;
   FOR ALL : MIPS_tester USE ENTITY work.mips_tester;
   -- pragma synthesis_on


BEGIN

   -- Instance port mappings.
   U_0 : MCU
	  GENERIC MAP ( 1 )
      PORT MAP (
			--reset			=> reset,
			CLK_in           => clock,
			PC				=> PC,
			Instruction_out	=> Instruction_out,
			LED				=> LED,
			HEX0			=> HEX0,
			HEX1			=> HEX1,
			HEX2			=> HEX2,
			HEX3			=> HEX3,
			HEX4			=> HEX4,
			HEX5			=> HEX5,
			SW	 			=> SW,
			push0			=> push0,
			push1			=> push1,
			push2			=> push2,
			push3			=> push3,
			PWM				=> PWM
      );
   U_1 : MIPS_tester
      PORT MAP (
			--reset			=> reset,
			clock           => clock,
			PC				=> PC,
			Instruction_out	=> Instruction_out,
			LED				=> LED,
			HEX0			=> HEX0,
			HEX1			=> HEX1,
			HEX2			=> HEX2,
			HEX3			=> HEX3,
			HEX4			=> HEX4,
			HEX5			=> HEX5,
			SW	 			=> SW,
			push0			=> push0,
			push1			=> push1,
			push2			=> push2,
			push3			=> push3,
			PWM				=> PWM
      );

END struct;
